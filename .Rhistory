install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
x<-5
x
install.packages("ggplot2")
plot()
?plot
ploy
plot
mean
predict()
predict
dgamma
?UseMethod
lm
show
colSums
predict
mean
dgamma
lm
show
?standardGeneric()
colSums
?getMethod
?showMethods
?getMethod
getMethod(lm)
getMethod('lm')
getMethod('mean')
getMethod(mean)
install.packages("DDPQuiz3")
library(DDPQuiz3)
download.packages("DDPQuiz3")
download.packages("DDPQuiz3",wd)
wd<-setwd("C:/Users/c ford/Documents")
download.packages("DDPQuiz3",wd)
install.packages("DDPQuiz3")
library(DDPQuiz3)
installed.packages("DPPQuiz3")
createmean <- function(x) {
answer <- mean(x)
return(answer)
}
?download.file
knitr::opts_chunk$set(echo = TRUE)
wd<-setwd("C:/Users/c ford/Documents/Reproducible research/Week2")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = wd)
wd<-setwd("C:/Users/c ford/Documents/Reproducible research/Week2")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = wd)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
unzip("activity.zip", exdir = wd)
unzip("activity.zip", exdir = wd
activity<-read.csv("activity.csv")
activity<-read.csv("activity.csv")
View(activity)
?mean
meansteps<-mean(activity$steps,na.rm = TRUE)
meansteps
View(activity)
bydate<-split(activity,activity$date)
View(bydate)
View(bydate)
bydate[[1]]
meansteps<-lapply(bydate,function(x){mean(x[,1],na.rm=TRUE)})
meansteps
?sum
sumsteps<-lapply(bydate,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps
bydate<-split(activity,activity$date)
meansteps<-lapply(bydate,function(x){mean(x[,1],na.rm=TRUE)})
meansteps
sumsteps<-lapply(bydate,function(x){sum(x[,1],na.rm=TRUE)})
knitr::opts_chunk$set(echo = TRUE)
wd<-setwd("C:/Users/c ford/Documents/Reproducible research/Week2")
if(!file.exists("activity.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
unzip("activity.zip", exdir = wd)
}
activity<-read.csv("activity.csv")
sumsteps
?hist
sumsteps_frame<-as.data.frame(unlist(sumsteps))
View(sumsteps_frame)
hist_steps<-hist(sumsteps_frame)
hist_steps<-hist(sumsteps_frame[,1])
View(sumsteps_frame)
row.names(sumsteps_frame)
sumsteps_frame$dates<-row.names(sumsteps_frame)
View(sumsteps_frame)
hist_steps<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks=sumsteps_frame$dates)
hist_steps<-hist(activity$steps)
hist_steps<-hist(activity$steps,break=activity$date)
hist_steps<-hist(activity$steps,breaks= activity$date)
hist_steps<-hist(activity$steps)
hist_steps<-hist(activity$steps, "days")
hist_steps<-hist(activity$steps, breaks="days")
hist_steps<-hist(activity$date)
hist_steps<-hist(as.date(activity$date))
hist_steps<-hist(as.Date(activity$date))
table(activity$date)
hist_steps<-hist(as.Date(activity$date), breaks = 288)
hist_steps<-hist(as.Date(activity$steps), breaks = 288)
hist_steps<-hist(activity$steps, breaks = 288)
hist_steps<-hist(activity$steps, breaks = 288, xlim=200, ylim=500)
hist_steps<-hist(activity$steps, breaks = 288, xlim=range(0,200), ylim=range(0,500))
hist_steps<-hist(activity$steps, breaks = 288, xlim=range(0,200), ylim=range(0,1000))
hist_steps<-hist(activity$steps, breaks = 288, xlim=range(0,200), ylim=range(0,4000))
View(sumsteps_frame)
hist_steps<-hist(sumsteps_frame$`unlist(sumsteps)`)
summary(activity$steps)
hist_steps<-hist(activity$steps, breaks = 288, xlim=range(0,200), ylim=range(0,4000))
complete<-complete.cases(sumsteps_frame)
completess<-sumsteps_frame[complete,]
View(completess)
View(sumsteps_frame)
complete<-complete.cases(activity)
completess<-activity[complete,]
View(completess)
View(activity)
View(completess)
complete<-complete.cases(activity)
completess<-activity[,complete]
hist_steps<-hist(completess$steps, breaks = 288, xlim=range(0,200), ylim=range(0,4000))
hist_steps<-hist(activity$steps, breaks = 288, xlim=range(1,200), ylim=range(1,4000))
hist_steps<-hist(activity$steps, breaks = 288, xlim=range(2,200), ylim=range(2,4000))
table(activity$steps)
hist_steps1<-hist(activity$steps, breaks = 288, xlim=range(2,200), ylim=range(2,4000))
hist_steps1<-hist(activity$steps, breaks = 288, xlim=range(100,200), ylim=range(100,4000))
hist_steps1<-hist(activity$steps, breaks = 288, xlim=range(5,200), ylim=range(5,4000))
hist_steps1<-hist(activity$steps, breaks = 288, xlim=range(10,200), ylim=range(10,4000))
hist_steps1<-hist(activity$steps, breaks = 288, xlim=range(10,200), ylim=range(10,300))
hist_steps1<-hist(activity$steps, breaks = 288, xlim=range(10,200), ylim=range(10,200))
View(sumsteps_frame)
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`)
nrow(sumsteps_frame)
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = 61)
View(sumsteps_frame)
summary(sumsteps_frame)
summary(sumsteps_frame$`unlist(sumsteps)`)
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,21194,by=1))
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,21194,by=100))
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,21194,by=1000))
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=2500))
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=1000))
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=100))
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=500))
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day", col="red",xlab="steps",ylab="number of days")
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day", col="red",xlab="Total Steps",ylab="Number of Days")
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day", col="red",xlab="Total Steps Per Day",ylab="Number of Days")
View(sumsteps_frame)
bydate<-split(activity,activity$date)
meansteps<-lapply(bydate,function(x){mean(x[,1],na.rm=TRUE)})
meansteps
sumsteps<-lapply(bydate,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps
sumsteps_frame<-as.data.frame(unlist(sumsteps))
sumsteps_frame$dates<-row.names(sumsteps_frame)
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day", col="red",xlab="Total Steps Per Day",ylab="Number of Days")
mean(sumsteps_frame$`unlist(sumsteps)`)
median(sumsteps_frame$`unlist(sumsteps)`)
View(activity)
?plot
load(ggplot2)
library(ggplot2)
View(activity)
byinterval<-split(activity,activity$interval)
View(byinterval)
View(byinterval)
byinterval<-split(activity,activity$interval)
meaninterval<-lapply(byinterval,function(x){mean(x[,1],na.rm=TRUE)})
meaninterval
table(activity$interval)
View(meaninterval)
test<-table(activity$interval)
View(byinterval)
View(meaninterval)
byinterval<-split(activity,activity$interval)
View(byinterval)
View(meaninterval)
meaninterval
meaninterval_frame<-unlist(meaninterval)
meaninterval_frame<-as.data.frame(unlist(meaninterval))
View(meaninterval_frame)
meaninterval_frame$interval<-row.names(meaninterval_frame)
View(meaninterval_frame)
View(meaninterval_frame)
int<-ggplot(data=meaninterval_frame, aes(x=interval, y=`unlist(meaninterval)`))
int+geom_line(color= "#FF5733", size=1)
ggplot()
ggplot()
Summary(meaninterval_frame$`unlist(meaninterval)`)
summary(meaninterval_frame$`unlist(meaninterval)`)
summary(meaninterval_frame$interval)
int<-ggplot(data=meaninterval_frame, aes(x=as.numeric(interval), y=`unlist(meaninterval)`), ylim=)
int+geom_line(color= "#FF5733", size=1)
View(meaninterval_frame)
int<-ggplot(data=meaninterval_frame, aes(x=as.numeric(interval), y=`unlist(meaninterval)`), ylim=)
int+geom_line(color= "#FF5733", size=1)
int<-ggplot(data=meaninterval_frame, aes(x=as.numeric(interval), y=`unlist(meaninterval)`), ylim=)
int+geom_line(color= "#FF5733", size=1)+labs(title="Average Number of Steps Per Time Interval")
int<-ggplot(data=meaninterval_frame, aes(x=as.numeric(interval), y=`unlist(meaninterval)`), ylim=)
int+geom_line(color= "#FF5733", size=1)+labs(title="Average Number of Steps Per Time Interval", xlab="Intervals", ylab="Average Steps")
int<-ggplot(data=meaninterval_frame, aes(x=as.numeric(interval), y=`unlist(meaninterval)`), ylim=)
int+geom_line(color= "#FF5733", size=1)+labs(title="Average Number of Steps Per Time Interval", x="Intervals", y="Average Steps")
high<-meaninterval_frame(order(meaninterval_frame$`unlist(meaninterval)`))
high<-meaninterval_frame[order(meaninterval_frame$`unlist(meaninterval)`),]
View(high)
high<-meaninterval_frame[order(meaninterval_frame$`unlist(meaninterval)`,decreasing = TRUE),]
View(high)
high[1,]
high[1,2]
missingcount<-complete.cases(activity)
table(missingcount)
missingcount
View(activity)
?complete.cases
table(missingcount)
?table
table(missingcount)[,1]
missing<-table(missingcount)
table(missingcount)[1]
table(missingcount)[1] & "Missing Cases"
paste(table(missingcount)[1],"missing cases")
View(meansteps)
meansteps
?impute
activityfill<-activity
activitysplit<-split(activityfill,activityfill$date)
is.na(activityfill$steps)
table(is.na(activityfill$steps))
activityfill[[1]]
activitysplit[[1]]
af<-activity
as<-split(af,af$date)
meansteps
for (i in 1:61){
as[i]$steps[is.na(as[i]$steps)] <- meansteps[i]
}
meansteps[[1]]
meansteps[[2]]
as[1]
as[[1]]$steps
for (i in 1:288){
as[i]$steps[is.na(as[i]$steps)] <- meaninterval[i]
}
meansteps
meansteps_frame<-as.data.frame(unlist(meansteps))
View(meansteps_frame)
View(meansteps_frame)
meansteps_frame$date<-row.names(meansteps_frame)
View(meansteps_frame)
class(meansteps_frame$date)
class(activityfill$date)
View(meansteps_frame)
View(activityfill)
activityfill1<-merge(activityfill,meansteps_frame,by.x='date', by.y='date')
View(activityfill1)
View(activityfill1)
class(activityfill$steps)
class(activityfill1$`unlist(meansteps)`)
table(activityfill1$steps)
nrow(activityfill1)
for (i in 1:nrow(activityfill1)) {if (activityfill1$steps[i]==NaN) {activityfill1$steps[i]<-activityfill1$`unlist(meansteps)`[i]}}
for (i in 1:nrow(activityfill1)) {if (activityfill1$steps[i]==NA) {activityfill1$steps[i]<-activityfill1$`unlist(meansteps)`[i]}}
for (i in 1:nrow(activityfill1)) {if (is.na(activityfill1$steps[i])) {activityfill1$steps[i]<-activityfill1$`unlist(meansteps)`[i]}}
View(activityfill1)
meansteps
View(activity)
table(is.na(activityfill1$steps))
test<-as.data.frame(is.na(activityfill1$steps)))
test<-as.data.frame(is.na(activityfill1$steps))
View(test)
8*288
activityfill<-activity
activityfill$steps[is.na(activityfill$steps)]<-mean(activity$steps,na.rm=TRUE)
View(activityfill)
mean(activity$steps,na.rm=TRUE)
bydate2<-split(activityfill,activityfill$date)
sumsteps2<-lapply(bydate2,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame2<-as.data.frame(unlist(sumsteps2))
sumsteps_frame2$dates<-row.names(sumsteps_frame2)
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps)`), breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with MISSING DATA IMPUTED", col="blue",xlab="Total Steps Per Day ",ylab="Number of Days")
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with MISSING DATA IMPUTED", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
hist_steps2
hist_steps1
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with MISSING DATA IMPUTED", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
missingcount<-complete.cases(activity)
paste(table(missingcount)[1],"missing cases")
activityfill<-activity
activityfill$steps[is.na(activityfill$steps)]<-mean(activity$steps,na.rm=TRUE)
bydate2<-split(activityfill,activityfill$date)
sumsteps2<-lapply(bydate2,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame2<-as.data.frame(unlist(sumsteps2))
sumsteps_frame2$dates<-row.names(sumsteps_frame2)
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with MISSING DATA IMPUTED", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
hist_steps2
mean(sumsteps_frame2$`unlist(sumsteps2)`)
median(sumsteps_frame2$`unlist(sumsteps2)`)
mean(sumsteps_frame2$`unlist(sumsteps2)`)
median(sumsteps_frame2$`unlist(sumsteps2)`)
View(activityfill)
View(activityfill)
mean(sumsteps_frame2$`unlist(sumsteps2)`)
activityfill$date2<-as.Date(activityfill$date)
View(activityfill)
class(activityfill$date2)
weekdays(activityfill$date2[1])
activityfill$day<-weekday(activityfill$date2)
activityfill$day<-weekdays(activityfill$date2)
View(activityfill)
?filter
activityfill$weekdayTRUE<-filter("Monday" || "Tuesday" || "Wednesday" || "Thursday" || "Friday" %in% activityfill$day )
activityfill$weekdayTRUE<-filter("Monday" %in% activityfill$day )
library(dplyr)
activityfill$weekdayTRUE<-filter("Monday" %in% activityfill$day )
View(activityfill)
class(activityfill$day)
?sapply
"Monday" %in% activityfill$day
"Monday" || "Tuesday" %in% activityfill$day
"Monday"  %in% activityfill$day || "Tuesday" %in% activityfill$day
ifelse()
ifelse()
?ifelse
activityfill$whichday<-ifelse("Monday"  %in% activityfill$day, "Weekday", "Weekend")
View(activityfill)
for i (1:nrow(activityfill$day)){
for (i in 1:nrow(activityfill$day)){
activityfill$whichday[i]<-ifelse("Monday"  %in% activityfill$day[i], "Weekday", "Weekend")}
View(activityfill)
for (i in 1:length(activityfill$day)){
activityfill$whichday[i]<-ifelse("Monday"  %in% activityfill$day[i], "Weekday", "Weekend")}
View(activityfill)
for (i in 1:length(activityfill$day)){
activityfill$whichday[i]<-ifelse("Saturday" %in% activityfill$day[i] || "Sunday" %in% activityfill$day, "Weekend", "Weekday")}
for (i in 1:length(activityfill$day)){
activityfill$whichday[i]<-ifelse("Saturday" %in% activityfill$day[i] || "Sunday" %in% activityfill$day[i], "Weekend", "Weekday")}
View(activityfill)
table(activityfill$day)
table(activityfill$whichday)
?filter
weekend<-activityfill %>% filter("Weekend" %in% day)
weekend<-activityfill %>% filter("Weekend" %in% activityfill$day)
weekend<-activityfill %>% filter("Weekend" %in% activityfill$whichday)
View(weekend)
weekend<-activityfill %>% filter("Weekend" %in% whichday)
weekday<-activityfill %>% filter("Weekday" %in% whichday)
weekend<-activityfill %>% filter(whichday=="Weekend")
weekday<-activityfill %>% filter(whichday=="Weekday")
wend_int<-split(weekend,weekend$interval)
wday_int<-split(weekday,weekday$interval)
View(wday_int)
mean_wend_int<-lapply(wend_int, function(x) {mean(x[,1],is.na=TRUE)})
mean_wday_int<-lapply(wday_int, function(x) {mean(x[,1],is.na=TRUE)})
View(mean_wend_int)
mean_wend_int_frame<-as.data.frame(unlist(mean_wend_int))
mean_wday_int_frame<-as.data.frame(unlist(mean_wday_int))
View(mean_wend_int_frame)
mean_wend_int_frame$interval<-row.names(mean_wend_int_frame)
mean_wday_int_frame$interval<-row.names(mean_wday_int_frame)
?par
?plot
par(mfrow=c(1,2))
plot(x=mean_wend_int_frame$interval,y=mean_wend_int_frame$`unlist(mean_wend_int)`, type='l', col='blue')
plot(x=mean_wday_int_frame$interval,y=mean_wday_int_frame$`unlist(mean_wend_int)`, type='l', col='red')
par(mfrow=c(1,2))
plot(x=mean_wend_int_frame$interval,y=mean_wend_int_frame$`unlist(mean_wend_int)`, type='l', col='blue')
plot(x=mean_wday_int_frame$interval,y=mean_wday_int_frame$`unlist(mean_wday_int)`, type='l', col='red')
par(mfrow=c(1,2))
plot(x=mean_wend_int_frame$interval,y=mean_wend_int_frame$`unlist(mean_wend_int)`, type='l', col='blue', main="Weekend",xlab="Interval", ylab="Average Steps by Interval on Weekend")
plot(x=mean_wday_int_frame$interval,y=mean_wday_int_frame$`unlist(mean_wday_int)`, type='l', col='red', main="Weekday", xlab="Interval", ylab="AveRAGE Steps by Interval on Weekday")
par(mfrow=c(1,2))
plot(x=mean_wend_int_frame$interval,y=mean_wend_int_frame$`unlist(mean_wend_int)`, type='l', col='blue', main="Weekend",xlab="Interval", ylab="Average Steps by Interval on Weekend")
plot(x=mean_wday_int_frame$interval,y=mean_wday_int_frame$`unlist(mean_wday_int)`, type='l', col='red', main="Weekday", xlab="Interval", ylab="Average Steps by Interval on Weekday")
par(mfrow=c(1,2))
plot(x=mean_wend_int_frame$interval,y=mean_wend_int_frame$`unlist(mean_wend_int)`, type='l', col='blue', main="Weekend",xlab="Interval", ylab="Average Steps by Interval on Weekend")
plot(x=mean_wday_int_frame$interval,y=mean_wday_int_frame$`unlist(mean_wday_int)`, type='l', col='red', main="Weekday", xlab="Interval", ylab="Average Steps by Interval on Weekday")
"THESE"
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
wd<-setwd("C:/Users/c ford/Documents/Reproducible research/Week2")
if(!file.exists("activity.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
unzip("activity.zip", exdir = wd)
}
activity<-read.csv("activity.csv")
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
wd<-setwd("C:/Users/c ford/Documents/Reproducible research/Week2")
if(!file.exists("activity.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
unzip("activity.zip", exdir = wd)
}
activity<-read.csv("activity.csv")
bydate<-split(activity,activity$date)
meansteps<-lapply(bydate,function(x){mean(x[,1],na.rm=TRUE)})
meansteps
sumsteps<-lapply(bydate,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps
bydate<-split(activity,activity$date)
meansteps<-lapply(bydate,function(x){mean(x[,1],na.rm=TRUE)})
sumsteps<-lapply(bydate,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps
sumsteps_frame<-as.data.frame(unlist(sumsteps))
sumsteps_frame$dates<-row.names(sumsteps_frame)
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day", col="red",xlab="Total Steps Per Day",ylab="Number of Days")
mean(sumsteps_frame$`unlist(sumsteps)`)
median(sumsteps_frame$`unlist(sumsteps)`)
byinterval<-split(activity,activity$interval)
meaninterval<-lapply(byinterval,function(x){mean(x[,1],na.rm=TRUE)})
meaninterval
meaninterval_frame<-as.data.frame(unlist(meaninterval))
meaninterval_frame$interval<-row.names(meaninterval_frame)
int<-ggplot(data=meaninterval_frame, aes(x=as.numeric(interval), y=`unlist(meaninterval)`), ylim=)
int+geom_line(color= "#FF5733", size=1)+labs(title="Average Number of Steps Per Time Interval", x="Intervals", y="Average Steps")
byinterval<-split(activity,activity$interval)
meaninterval<-lapply(byinterval,function(x){mean(x[,1],na.rm=TRUE)})
meaninterval_frame<-as.data.frame(unlist(meaninterval))
meaninterval_frame$interval<-row.names(meaninterval_frame)
int<-ggplot(data=meaninterval_frame, aes(x=as.numeric(interval), y=`unlist(meaninterval)`), ylim=)
int+geom_line(color= "#FF5733", size=1)+labs(title="Average Number of Steps Per Time Interval", x="Intervals", y="Average Steps")
high<-meaninterval_frame[order(meaninterval_frame$`unlist(meaninterval)`,decreasing = TRUE),]
high[1,2]
missingcount<-complete.cases(activity)
paste(table(missingcount)[1],"missing cases")
missingcount<-complete.cases(activity)
paste(table(missingcount)[1],"rows with missing values")
activityfill<-activity
activityfill$steps[is.na(activityfill$steps)]<-mean(activity$steps,na.rm=TRUE)
bydate2<-split(activityfill,activityfill$date)
sumsteps2<-lapply(bydate2,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame2<-as.data.frame(unlist(sumsteps2))
sumsteps_frame2$dates<-row.names(sumsteps_frame2)
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with MISSING DATA IMPUTED", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
hist_steps2
mean(sumsteps_frame2$`unlist(sumsteps2)`)
median(sumsteps_frame2$`unlist(sumsteps2)`)
"These values are different than the mean and median in the first segment, but they have no impact on daily steps."
bydate2<-split(activityfill,activityfill$date)
sumsteps2<-lapply(bydate2,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame2<-as.data.frame(unlist(sumsteps2))
sumsteps_frame2$dates<-row.names(sumsteps_frame2)
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with MISSING DATA IMPUTED", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
mean(sumsteps_frame2$`unlist(sumsteps2)`)
median(sumsteps_frame2$`unlist(sumsteps2)`)
"These values are different than the mean and median in the first segment and are slightly higher than the original mean and median of average daily total steps."
bydate2<-split(activityfill,activityfill$date)
sumsteps2<-lapply(bydate2,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame2<-as.data.frame(unlist(sumsteps2))
sumsteps_frame2$dates<-row.names(sumsteps_frame2)
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with MISSING DATA IMPUTED", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
paste("Mean is ",mean(sumsteps_frame2$`unlist(sumsteps2)`))
paste("Median is ",median(sumsteps_frame2$`unlist(sumsteps2)`))
"These values are different than the mean and median in the first segment and are slightly higher than the original mean and median of average daily total steps."
activityfill$date2<-as.Date(activityfill$date)
activityfill$day<-weekdays(activityfill$date2)
for (i in 1:length(activityfill$day)){
activityfill$whichday[i]<-ifelse("Saturday" %in% activityfill$day[i] || "Sunday" %in% activityfill$day[i], "Weekend", "Weekday")}
weekend<-activityfill %>% filter(whichday=="Weekend")
weekday<-activityfill %>% filter(whichday=="Weekday")
wend_int<-split(weekend,weekend$interval)
wday_int<-split(weekday,weekday$interval)
mean_wend_int<-lapply(wend_int, function(x) {mean(x[,1],is.na=TRUE)})
mean_wday_int<-lapply(wday_int, function(x) {mean(x[,1],is.na=TRUE)})
mean_wend_int_frame<-as.data.frame(unlist(mean_wend_int))
mean_wday_int_frame<-as.data.frame(unlist(mean_wday_int))
mean_wend_int_frame$interval<-row.names(mean_wend_int_frame)
mean_wday_int_frame$interval<-row.names(mean_wday_int_frame)
par(mfrow=c(1,2))
plot(x=mean_wend_int_frame$interval,y=mean_wend_int_frame$`unlist(mean_wend_int)`, type='l', col='blue', main="Weekend",xlab="Interval", ylab="Average Steps by Interval on Weekend")
plot(x=mean_wday_int_frame$interval,y=mean_wday_int_frame$`unlist(mean_wday_int)`, type='l', col='red', main="Weekday", xlab="Interval", ylab="Average Steps by Interval on Weekday")
high<-meaninterval_frame[order(meaninterval_frame$`unlist(meaninterval)`,decreasing = TRUE),]
paste("Interval with highest average steps is",high[1,2])
paste("Mean steps taken per day is",mean(sumsteps_frame$`unlist(sumsteps)`))
paste("Median steps taken per day is",median(sumsteps_frame$`unlist(sumsteps)`))
paste("Mean total steps taken per day is",mean(sumsteps_frame$`unlist(sumsteps)`))
paste("Median total steps taken per day is",median(sumsteps_frame$`unlist(sumsteps)`))
bydate<-split(activity,activity$date)
meansteps<-lapply(bydate,function(x){mean(x[,1],na.rm=TRUE)})
sumsteps<-lapply(bydate,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame<-as.data.frame(unlist(sumsteps))
sumsteps_frame$dates<-row.names(sumsteps_frame)
hist_steps1<-hist(sumsteps_frame$`unlist(sumsteps)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day", col="red",xlab="Total Steps Per Day",ylab="Number of Days")
paste("Mean total steps taken per day is",mean(sumsteps_frame$`unlist(sumsteps)`))
paste("Median total steps taken per day is",median(sumsteps_frame$`unlist(sumsteps)`))
bydate2<-split(activityfill,activityfill$date)
sumsteps2<-lapply(bydate2,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame2<-as.data.frame(unlist(sumsteps2))
sumsteps_frame2$dates<-row.names(sumsteps_frame2)
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Histogram of Total Number of Steps Per Day with IMPUTED MISSING DATA ", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
paste("Mean is ",mean(sumsteps_frame2$`unlist(sumsteps2)`))
paste("Median is ",median(sumsteps_frame2$`unlist(sumsteps2)`))
"These values are different than the mean and median in the first segment and are slightly higher than the original mean and median of average daily total steps."
bydate2<-split(activityfill,activityfill$date)
sumsteps2<-lapply(bydate2,function(x){sum(x[,1],na.rm=TRUE)})
sumsteps_frame2<-as.data.frame(unlist(sumsteps2))
sumsteps_frame2$dates<-row.names(sumsteps_frame2)
hist_steps2<-hist(sumsteps_frame2$`unlist(sumsteps2)`, breaks = seq(0,25000,by=500), main="Total Number of Steps Per Day with IMPUTED MISSING DATA ", col="blue", xlab="Total Steps Per Day ",ylab="Number of Days")
paste("Mean is ",mean(sumsteps_frame2$`unlist(sumsteps2)`))
paste("Median is ",median(sumsteps_frame2$`unlist(sumsteps2)`))
"These values are different than the mean and median in the first segment and are slightly higher than the original mean and median of average daily total steps."
library(knitr)
knitr::knit("PA1_template.Rmd")
